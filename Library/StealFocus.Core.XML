<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StealFocus.Core</name>
    </assembly>
    <members>
        <member name="T:StealFocus.Core.Collections.Generic.SerializableDictionary`2">
            <summary>
            Dictionary Class.
            </summary>
            <remarks>
            Can be serialized.
            </remarks>
            <typeparam name="TKey">Type representing the key type.</typeparam>
            <typeparam name="TValue">Type representing the value type.</typeparam>
        </member>
        <member name="M:StealFocus.Core.Collections.Generic.SerializableDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the SerializableDictionary class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Collections.Generic.SerializableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SerializableDictionary class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:StealFocus.Core.Collections.Generic.SerializableDictionary`2.GetSchema">
            <summary>
            Returns the Schema.
            </summary>
            <returns>The schema.</returns>
        </member>
        <member name="M:StealFocus.Core.Collections.Generic.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:StealFocus.Core.Collections.Generic.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">An <see cref="T:System.Xml.XmlWriter"/>. The writer.</param>
        </member>
        <member name="T:StealFocus.Core.CoreException">
            <summary>
            CoreException Class.
            </summary>
            <remarks>
            Base exception class for the framework.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.CoreException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.CoreException"/> class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.CoreException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.CoreException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.CoreException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.CoreException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">An <see cref="T:System.Exception"/>. The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.CoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.CoreException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="T:StealFocus.Core.Diagnostics.CircularTraceListener">
            <summary>
            CircularTraceListener Class.
            </summary>
            <remarks>
            Usage as follows.
            <![CDATA[
                <system.diagnostics>
                    <sharedListeners>
                        <add
                           name="CircularTraceListener"
                            type="StealFocus.Core.Diagnostics.CircularTraceListener, StealFocus.Core"
                            initializeData="C:\Windows\Temp\MySvcTraceFile.svclog"
                            maxFileSizeKB="10000" />
                    </sharedListeners>
                    <sources>
                        <source
                            name="System.ServiceModel"
                            switchValue="Information, ActivityTracing"
                            propagateActivity="true" >
                            <listeners>
                                <add name="CircularTraceListener"/>
                            </listeners>
                        </source>
                        <source 
                            name="System.ServiceModel.MessageLogging">
                            <listeners>
                                <add name="CircularTraceListener" />
                            </listeners>
                        </source>
                    <sources>
                <system.diagnostics>
            ]]>
            </remarks>
        </member>
        <member name="F:StealFocus.Core.Diagnostics.CircularTraceListener.FileQuotaAttribute">
            <summary>
            Holds the FileQuotaAttribute.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Diagnostics.CircularTraceListener.DefaultMaxQuota">
            <summary>
            Holds the DefaultMaxQuota.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Diagnostics.CircularTraceListener.DefaultTraceFile">
            <summary>
            Holds the DefaultTraceFile.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Diagnostics.CircularTraceListener.circularStream">
            <summary>
            Holds the circularStream.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Diagnostics.CircularTraceListener.maxQuotaInitialized">
            <summary>
            Holds the maxQuotaInitialized.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.Diagnostics.CircularTraceListener"/> class.
            </summary>
            <param name="file">The file path.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.Diagnostics.CircularTraceListener"/> class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Trace the data.
            </summary>
            <param name="eventCache">The event cache.</param>
            <param name="source">The source.</param>
            <param name="eventType">The event type.</param>
            <param name="id">The ID value.</param>
            <param name="data">The data to trace.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>
            Trace the data.
            </summary>
            <param name="eventCache">The event cache.</param>
            <param name="source">The source.</param>
            <param name="eventType">The event type.</param>
            <param name="id">The ID value.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>
            Trace the data.
            </summary>
            <param name="eventCache">The event cache.</param>
            <param name="source">The source.</param>
            <param name="eventType">The event type.</param>
            <param name="id">The ID value.</param>
            <param name="data">The data to trace.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>
            Trace the data.
            </summary>
            <param name="eventCache">The event cache.</param>
            <param name="source">The source.</param>
            <param name="eventType">The event type.</param>
            <param name="id">The ID value.</param>
            <param name="format">The format.</param>
            <param name="args">The args data.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Trace the data.
            </summary>
            <param name="eventCache">The event cache.</param>
            <param name="source">The source.</param>
            <param name="eventType">The event type.</param>
            <param name="id">The ID value.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>
            Trace the data.
            </summary>
            <param name="eventCache">The event cache.</param>
            <param name="source">The source.</param>
            <param name="id">The ID value.</param>
            <param name="message">The message.</param>
            <param name="relatedActivityId">The related Activity ID.</param>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.GetSupportedAttributes">
            <summary>
            Get the supported attributes.
            </summary>
            <returns>
            The attributes.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Diagnostics.CircularTraceListener.DetermineOverQuota">
            <summary>
            Determine if over quota.
            </summary>
        </member>
        <member name="P:StealFocus.Core.Diagnostics.CircularTraceListener.MaxQuotaSize">
            <summary>
            Gets MaxQuotaSize.
            </summary>
        </member>
        <member name="T:StealFocus.Core.GlobalAssemblyCache">
            <summary>
            GlobalAssemblyCache Class.
            </summary>
            <remarks>
            Manipulates the GAC.
            </remarks>
        </member>
        <member name="F:StealFocus.Core.GlobalAssemblyCache.fusionType">
            <summary>
            Holds the Type for Fusion.
            </summary>
        </member>
        <member name="M:StealFocus.Core.GlobalAssemblyCache.GetAssemblyList(StealFocus.Core.GlobalAssemblyCacheCategoryTypes)">
            <summary>
            Gets a list of items in the GAC.
            </summary>
            <param name="globalAssemblyCacheCategory">The category.</param>
            <returns>An array of <see cref="T:StealFocus.Core.GlobalAssemblyCacheItem"/>. The items in the GAC.</returns>
        </member>
        <member name="M:StealFocus.Core.GlobalAssemblyCache.InitialiseFusion">
            <summary>
            Initialises <see cref="F:StealFocus.Core.GlobalAssemblyCache.fusionType"/>.
            </summary>
            <returns>The type representing Fusion.</returns>
        </member>
        <member name="M:StealFocus.Core.GlobalAssemblyCache.Get(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets an object.
            </summary>
            <param name="source">An <see cref="T:System.Object"/>. The object.</param>
            <param name="name">The name of the item.</param>
            <param name="type">The type to get.</param>
            <returns>An <see cref="T:System.Object"/>. The value.</returns>
        </member>
        <member name="M:StealFocus.Core.GlobalAssemblyCache.GetField(System.Object,System.String)">
            <summary>
            Gets a field.
            </summary>
            <param name="source">An <see cref="T:System.Object"/>. The item containing the field.</param>
            <param name="name">The name of the field.</param>
            <returns>An <see cref="T:System.Object"/>. The field value.</returns>
        </member>
        <member name="T:StealFocus.Core.GlobalAssemblyCacheCategoryTypes">
            <summary>
            GlobalAssemblyCacheCategoryTypes Enum.
            </summary>
        </member>
        <member name="F:StealFocus.Core.GlobalAssemblyCacheCategoryTypes.None">
            <summary>
            The None Type.
            </summary>
        </member>
        <member name="F:StealFocus.Core.GlobalAssemblyCacheCategoryTypes.Zap">
            <summary>
            The Zap Type.
            </summary>
        </member>
        <member name="F:StealFocus.Core.GlobalAssemblyCacheCategoryTypes.Gac">
            <summary>
            The Gac Type.
            </summary>
        </member>
        <member name="F:StealFocus.Core.GlobalAssemblyCacheCategoryTypes.Download">
            <summary>
            The Download Type.
            </summary>
        </member>
        <member name="T:StealFocus.Core.GlobalAssemblyCacheItem">
            <summary>
            GlobalAssemblyCacheItem Class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.GlobalAssemblyCacheItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.GlobalAssemblyCacheItem"/> class. 
            </summary>
            <param name="name">The name of the item.</param>
            <param name="version">The version.</param>
            <param name="locale">The locale.</param>
            <param name="publicKeyToken">The public key token.</param>
        </member>
        <member name="P:StealFocus.Core.GlobalAssemblyCacheItem.Locale">
            <summary>
            Gets the Locale.
            </summary>
        </member>
        <member name="P:StealFocus.Core.GlobalAssemblyCacheItem.Name">
            <summary>
            Gets the Name.
            </summary>
        </member>
        <member name="P:StealFocus.Core.GlobalAssemblyCacheItem.PublicKeyToken">
            <summary>
            Gets the PublicKeyToken.
            </summary>
        </member>
        <member name="P:StealFocus.Core.GlobalAssemblyCacheItem.Version">
            <summary>
            Gets the Version.
            </summary>
        </member>
        <member name="T:StealFocus.Core.Iis.Metabase">
            <summary>
            Metabase Class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Iis.Metabase.IsWebsiteRunning(System.String)">
            <summary>
            Indicates if the Web Site is running.
            </summary>
            <param name="websiteDescription">The website description e.g. "Default Web Site".</param>
            <returns>An <see cref="T:System.Boolean"/>. Indicating if the Web Site is running.</returns>
        </member>
        <member name="M:StealFocus.Core.Iis.Metabase.IsAppPoolRunning(System.String)">
            <summary>
            Indicates if the AppPool is running.
            </summary>
            <param name="appPoolName">The AppPool name.</param>
            <returns>An <see cref="T:System.Boolean"/>. Indicating if the AppPool is running.</returns>
        </member>
        <member name="T:StealFocus.Core.Iis.Metabase.IIsWebServerSettingPropertyNames">
            <summary>
            Holds the Property names found in the IIsWebServerSetting Management Object.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.IIsWebServerSettingPropertyNames.ServerComment">
            <summary>
            The ServerComment Property name.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.IIsWebServerSettingPropertyNames.Name">
            <summary>
            The Name Property name.
            </summary>
        </member>
        <member name="T:StealFocus.Core.Iis.Metabase.IIsWebServerPropertyNames">
            <summary>
            Holds the Property names found in the IIsWebServerPropertyNames Management Object.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.IIsWebServerPropertyNames.ServerState">
            <summary>
            The Name Property name.
            </summary>
        </member>
        <member name="T:StealFocus.Core.Iis.Metabase.WebsiteStatus">
            <summary>
            Holds the available Website states.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.WebsiteStatus.Started">
            <summary>
            The Started value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.WebsiteStatus.Stopped">
            <summary>
            The Stopped value.
            </summary>
        </member>
        <member name="T:StealFocus.Core.Iis.Metabase.IisApplicationPoolSettingPropertyNames">
            <summary>
            Holds the Property names found in the IisApplicationPoolSetting Management Object.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.IisApplicationPoolSettingPropertyNames.AppPoolState">
            <summary>
            The AppPoolState Property name.
            </summary>
        </member>
        <member name="T:StealFocus.Core.Iis.Metabase.AppPoolStatus">
            <summary>
            Holds the available AppPool states.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.AppPoolStatus.Started">
            <summary>
            The Started value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Iis.Metabase.AppPoolStatus.Stopped">
            <summary>
            The Stopped value.
            </summary>
        </member>
        <member name="T:StealFocus.Core.Iis.WebServer">
            <summary>
            WebServer Class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetVersion">
            <summary>
            Gets the version of IIS.
            </summary>
            <returns>The OS version.</returns>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetVersion(System.String)">
            <summary>
            Gets the version of IIS.
            </summary>
            <param name="machineName">The machine name.</param>
            <returns>The OS version.</returns>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetVersion(System.String,System.String,System.String)">
            <summary>
            Gets the version of IIS.
            </summary>
            <param name="machineName">The machine name.</param>
            <param name="userName">The username.</param>
            <param name="password">The password.</param>
            <returns>The OS version.</returns>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetDefaultAspNetUserName">
            <summary>
            Get the default ASP.NET username.
            </summary>
            <returns>The username.</returns>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetDefaultAspNetUserName(System.String)">
            <summary>
            Get the default ASP.NET username for the given machine.
            </summary>
            <param name="computerName">The machine name.</param>
            <returns>The username.</returns>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetDefaultAspNetUserNameUnqualified(System.String)">
            <summary>
            Gets the ASP.NET username without the domain/machine qualification.
            </summary>
            <param name="computerName">The computer name.</param>
            <returns>The username.</returns>
            <remarks>
            For example returns "NETWORK SERVICE" instead of "NT AUTHORITY\NETWORK SERVICE".
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Iis.WebServer.GetVersion(System.String,System.Management.ConnectionOptions)">
            <summary>
            Gets the version of IIS for the given machine.
            </summary>
            <param name="machineName">The machine name.</param>
            <param name="options">The connection options.</param>
            <returns>The OS version.</returns>
        </member>
        <member name="T:StealFocus.Core.IO.CircularStream">
            <summary>
            CircularStream Class.
            </summary>
        </member>
        <member name="F:StealFocus.Core.IO.CircularStream.fileStream">
            <summary>
            Holds the file stream.
            </summary>
        </member>
        <member name="F:StealFocus.Core.IO.CircularStream.filePaths">
            <summary>
            Holds the file paths.
            </summary>
        </member>
        <member name="F:StealFocus.Core.IO.CircularStream.dataWritten">
            <summary>
            Holds the data.
            </summary>
        </member>
        <member name="F:StealFocus.Core.IO.CircularStream.fileQuota">
            <summary>
            Holds the file size quota.
            </summary>
        </member>
        <member name="F:StealFocus.Core.IO.CircularStream.currentFile">
            <summary>
            Holds the .
            </summary>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.IO.CircularStream"/> class.
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.SwitchFiles">
            <summary>
            Switch the files being used.
            </summary>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.Flush">
            <summary>
            Flish to the current file.
            </summary>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek a position in the stream.
            </summary>
            <param name="offset">The offset.</param>
            <param name="origin">The origin.</param>
            <returns>The position of the stream.</returns>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.SetLength(System.Int64)">
            <summary>
            Set the length of the current stream.
            </summary>
            <param name="value">The length to set.</param>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write to the stream.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from the current stream.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>The value read.</returns>
        </member>
        <member name="M:StealFocus.Core.IO.CircularStream.Close">
            <summary>
            Close the currrent stream.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.MaxQuotaSize">
            <summary>
            Gets or sets MaxQuotaSize.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.IsOverQuota">
            <summary>
            Gets a value indicating whether IsOverQuota.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.CanRead">
            <summary>
            Gets a value indicating whether CanRead.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.CanSeek">
            <summary>
            Gets a value indicating whether CanSeek.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.Length">
            <summary>
            Gets Length.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.Position">
            <summary>
            Gets or sets Position.
            </summary>
        </member>
        <member name="P:StealFocus.Core.IO.CircularStream.CanWrite">
            <summary>
            Gets a value indicating whether CanWrite.
            </summary>
        </member>
        <member name="T:StealFocus.Core.IO.FileSystem">
            <summary>
            FileSystem Class.
            </summary>
            <remarks>
            Contains methods to help when working with the file system.
            </remarks>
        </member>
        <member name="F:StealFocus.Core.IO.FileSystem.AssemblyExpected">
            <summary>
            Used to indicate if a file is an assembly.
            </summary>
        </member>
        <member name="M:StealFocus.Core.IO.FileSystem.ComputeHash(System.String)">
            <summary>
            Gets a hash of a file at a given path.
            </summary>
            <param name="pathToFile">The path to the file.</param>
            <returns>The hash of the given file.</returns>
        </member>
        <member name="M:StealFocus.Core.IO.FileSystem.Compare(System.String,System.String)">
            <summary>
            Compares two files and indicates if they are the same.
            </summary>
            <param name="pathToFile1">A path to file 1.</param>
            <param name="pathToFile2">A path to file 2.</param>
            <returns>Indicates if the files are the same.</returns>
        </member>
        <member name="M:StealFocus.Core.IO.FileSystem.IsAssembly(System.String)">
            <summary>
            Determines if a file is an Assembly.
            </summary>
            <param name="filePath">The path of the file.</param>
            <returns>Indicating if the file is an assembly.</returns>
        </member>
        <member name="M:StealFocus.Core.IO.FileSystem.CopyAccessControlList(System.String,System.String)">
            <summary>
            Copies the Access Control List (ACL) from one file to another.
            </summary>
            <param name="pathToSourceFile">The path to the source file.</param>
            <param name="pathToDestinationFile">The path to the destination file.</param>
        </member>
        <member name="M:StealFocus.Core.IO.FileSystem.CopyAccessControlList(System.String,System.String,System.Security.AccessControl.FileSystemAccessRule[])">
            <summary>
            Copies the Access Control List (ACL) from one file to another and specify additional ACL rules on the destination file.
            </summary>
            <param name="pathToSourceFile">The path to the source file.</param>
            <param name="pathToDestinationFile">The path to the destination file.</param>
            <param name="additionalFileSystemAccessRules">An array of <see cref="T:System.Security.AccessControl.FileSystemAccessRule"/>. The additional ACLs.</param>
        </member>
        <member name="M:StealFocus.Core.IO.FileSystem.CheckFilePathParameter(System.String,System.String)">
            <summary>
            Check if a file is at a given path when a path is given as a parameter.
            </summary>
            <param name="filePathParameterName">The name of the parameter.</param>
            <param name="filePathParameterValue">The path given in the parameter value.</param>
        </member>
        <member name="T:StealFocus.Core.OperatingSystem">
            <summary>
            OperatingSystem Class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.OperatingSystem.GetVersion">
            <summary>
            Gets the version of the current OS.
            </summary>
            <returns>The OS version.</returns>
        </member>
        <member name="M:StealFocus.Core.OperatingSystem.GetVersion(System.String)">
            <summary>
            Gets the version of the OS for the given machine.
            </summary>
            <param name="machineName">The machine name.</param>
            <returns>The OS version.</returns>
        </member>
        <member name="M:StealFocus.Core.OperatingSystem.GetVersion(System.String,System.String,System.String)">
            <summary>
            Gets the version of the OS for the given machine.
            </summary>
            <param name="machineName">The machine name.</param>
            <param name="userName">The username.</param>
            <param name="password">The password.</param>
            <returns>The OS version.</returns>
        </member>
        <member name="M:StealFocus.Core.OperatingSystem.GetVersion(System.String,System.Management.ConnectionOptions)">
            <summary>
            Gets the version of the OS for the given machine.
            </summary>
            <param name="machineName">The machine name.</param>
            <param name="options">The connection options.</param>
            <returns>The OS version.</returns>
        </member>
        <member name="T:StealFocus.Core.Resource">
            <summary>
            Resource Class.
            </summary>
            <remarks />
        </member>
        <member name="M:StealFocus.Core.Resource.GetString(System.Object,System.String)">
            <summary>
            Gets a resource string for the <c>requester</c> matching the <c>key</c>.
            </summary>
            <param name="requester">An <see cref="T:System.Object"/>. The object requesting the resource.</param>
            <param name="key">The key identifying the resource..</param>
            <returns>The string retrieved from the Resource File.</returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Resource.GetString(System.Type,System.String)">
            <summary>
            Gets a resource string for the <c>requesterType</c> matching the <c>key</c>.
            </summary>
            <param name="requesterType">An <see cref="T:System.Object"/>. The <see cref="T:System.Type"/> of the requester of the resource.</param>
            <param name="key">The key identifying the resource..</param>
            <returns>The string retrieved from the Resource File.</returns>
            <remarks>
            None.
            </remarks>
            <exception cref="T:StealFocus.Core.CoreException">Thrown when the <see cref="T:System.Resources.ResourceManager"/> returns a null resource string for the provided key.</exception>
        </member>
        <member name="M:StealFocus.Core.Resource.GetXmlDocument(System.String,System.String)">
            <summary>
            Loads an XML Document from a resource.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="xmlDocumentResourceName">The XML Document Resource Name.</param>
            <returns>
            An <see cref="T:System.Xml.XmlDocument"/>, the embedded resource.
            </returns>
            <remarks>
            The <c>assemblyName</c> should be the assembly file name without the ".dll" extension. The <c>xmlDocumentResourceName</c> should be the fully qualified name of the resource e.g. "Namespace.DocumentName.xml".
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Resource.GetXmlDocument(System.Reflection.Assembly,System.String)">
            <summary>
            Gets an XML Document from an embedded resource.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="xmlDocumentResourceName">The XML Document Resource Name.</param>
            <returns>
            An <see cref="T:System.Xml.XmlDocument"/>, the embedded resource.
            </returns>
            <remarks/>
        </member>
        <member name="M:StealFocus.Core.Resource.GetXmlSchema(System.String,System.String)">
            <summary>
            Loads an XSD Schema from a resource.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="xsdDocumentResourceName">The XSD Document Resource Name.</param>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/>, the embedded resource.
            </returns>
            <remarks>
            The <c>assemblyName</c> should be the assembly file name without the ".dll" extension. The <c>xsdDocumentResourceName</c> should be the fully qualified name of the resource e.g. "Namespace.DocumentName.xml".
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Resource.GetXmlSchema(System.Reflection.Assembly,System.String)">
            <summary>
            Loads an XSD Schema from a resource.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="xsdDocumentResourceName">The XSD Document Resource Name.</param>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/>, the embedded resource.
            </returns>
            <remarks>
            The <c>assemblyName</c> should be the assembly file name without the ".dll" extension. The <c>xsdDocumentResourceName</c> should be the fully qualified name of the resource e.g. "Namespace.DocumentName.xml".
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Resource.GetFile(System.String,System.String)">
            <summary>
            Get a file from an embedded resource.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="fileResourceName">The name of the resource.</param>
            <returns>
            A Stream containing the file.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetFile(System.Reflection.Assembly,System.String)">
            <summary>
            Get a file from an embedded resource.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="fileResourceName">The name of the resource.</param>
            <returns>
            A Stream containing the file.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetFileAndWriteToPath(System.String,System.String,System.String)">
            <summary>
            Gets a file from an embedded resource and writes it to a path.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="fileResourceName">The name of the resource.</param>
            <param name="filePathToBeWrittenTo">The path to write the file to.</param>
        </member>
        <member name="M:StealFocus.Core.Resource.GetFileAndWriteToPath(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Gets a file from an embedded resource and writes it to a path.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="fileResourceName">The name of the resource.</param>
            <param name="filePathToBeWrittenTo">The path to write the file to.</param>
        </member>
        <member name="M:StealFocus.Core.Resource.GetBinaryFileAndWriteToPath(System.String,System.String,System.String)">
            <summary>
            Gets a binary file from an embedded resource and writes it to a path.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="fileResourceName">The name of the resource.</param>
            <param name="filePathToBeWrittenTo">The path to write the file to.</param>
        </member>
        <member name="M:StealFocus.Core.Resource.GetBinaryFileAndWriteToPath(System.String,System.String)">
            <summary>
            Gets a binary file from an embedded resource and writes it to a path.
            </summary>
            <param name="fileResourceName">The name of the resource.</param>
            <param name="filePathToBeWrittenTo">The path to write the file to.</param>
        </member>
        <member name="M:StealFocus.Core.Resource.GetBinaryFileAndWriteToPath(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Gets a binary file from an embedded resource and writes it to a path.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="fileResourceName">The name of the resource.</param>
            <param name="filePathToBeWrittenTo">The path to write the file to.</param>
        </member>
        <member name="M:StealFocus.Core.Resource.GetImage(System.String,System.String)">
            <summary>
            Gets an embedded image resource.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="imageResourceName">The image resource name.</param>
            <returns>
            An image from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetImage(System.String)">
            <summary>
            Gets an embedded image resource.
            </summary>
            <param name="imageResourceName">The image resource name.</param>
            <returns>
            An image from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetImage(System.Reflection.Assembly,System.String)">
            <summary>
            Gets an embedded image resource.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="imageResourceName">The image resource name.</param>
            <returns>
            An image from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssemblyBytes(System.String,System.String)">
            <summary>
            Gets an assembly resource.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="assemblyResourceName">The assembly resource name.</param>
            <returns>
            An assembly from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssemblyBytes(System.String)">
            <summary>
            Gets an assembly resource.
            </summary>
            <param name="assemblyResourceName">The assembly resource name.</param>
            <returns>
            An assembly from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssemblyBytes(System.Reflection.Assembly,System.String)">
            <summary>
            Gets an assembly resource.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="assemblyResourceName">The assembly resource name.</param>
            <returns>
            An assembly from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssembly(System.String,System.String)">
            <summary>
            Gets an assembly resource.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="assemblyResourceName">The assembly resource name.</param>
            <returns>
            An assembly from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssembly(System.String)">
            <summary>
            Gets an assembly resource.
            </summary>
            <param name="assemblyResourceName">The assembly resource name.</param>
            <returns>
            An assembly from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Gets an assembly resource.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="assemblyResourceName">The assembly resource name.</param>
            <returns>
            An assembly from the embedded resource.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetAssemblyContainingResource(System.String)">
            <summary>
            Gets the assembly containing the resource.
            </summary>
            <param name="assemblyName">The assembly Name.</param>
            <returns>
            An assembly.
            </returns>
        </member>
        <member name="M:StealFocus.Core.Resource.GetCurrentCulture">
            <summary>
            Gets the current <see cref="T:System.Globalization.CultureInfo">culture</see>.
            </summary>
            <returns>The culture information for the current thread.</returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="T:StealFocus.Core.Security.Impersonation">
            <summary>
            Allows the use of impersonation wrapped around a block of code
            </summary>
            <example>
            using(new Impersonation(username, domain, password))
            {
                //do some work while impersonating
            }
            </example>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.windowsImpersonationContext">
            <summary>
            Holds the impersonation context.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.disposed">
            <summary>
            Holds whether the object is disposed.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.Security.Impersonation"/> class.
            </summary>
            <param name="user">The username.</param>
            <param name="domain">The domain.</param>
            <param name="password">The password.</param>
            <exception cref="T:StealFocus.Core.CoreException"/>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.#ctor(System.Security.Principal.WindowsIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.Security.Impersonation"/> class.
            </summary>
            <param name="windowsId">The Windows ID.</param>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StealFocus.Core.Security.Impersonation"/> class.
            </summary>
            <remarks>
            This uses the principal on the current thread to set up impersonation
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:StealFocus.Core.Security.Impersonation"/> class. 
            </summary>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.Dispose(System.Boolean)">
            <summary>
            Disposes the object.
            </summary>
            <param name="disposing">Whether to dispose.</param>
        </member>
        <member name="T:StealFocus.Core.Security.Impersonation.MySafeLogonHandle">
            <summary>
            Wrapper for my token
            </summary>    
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONINTERACTIVE">
            <summary>
            Holds the Logon Interactive value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONNETWORK">
            <summary>
            Holds the Logon Network value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONBATCH">
            <summary>
            Holds the Logon Batch value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONSERVICE">
            <summary>
            Holds the Logon Service value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONUNLOCK">
            <summary>
            Holds the Logon Unlock value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONNETWORKCLEARTEXT">
            <summary>
            Holds the Logon Network Clear value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32LOGONNEWCREDENTIALS">
            <summary>
            Holds the Logon New Credentials value.
            </summary>
        </member>
        <member name="F:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.LOGON32PROVIDERDEFAULT">
            <summary>
            Holds the Logon Provider Default value.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:StealFocus.Core.Security.Impersonation.MySafeLogonHandle"/> class from being created.
            </summary>
            <remarks>
            Create a SafeHandle, informing the base class
            that this SafeHandle instance "owns" the handle,
            and therefore SafeHandle should call
            our ReleaseHandle method when the SafeHandle
            is no longer in use.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.Logon(System.String,System.String,System.String)">
            <summary>
            Logs on the user
            </summary>
            <param name="user">The username.</param>
            <param name="domain">The domain.</param>
            <param name="password">The password.</param>
            <returns>The Windows Identity.</returns>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.ReleaseHandle">
            <summary>
            Releases the handle
            </summary>
            <returns>If the handle is closed.</returns>
        </member>
        <member name="P:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.IsInvalid">
            <summary>
            Overrides the isinvalid method
            </summary>
        </member>
        <member name="T:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.NativeMethods">
            <summary>
            Contains native methods
            </summary>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.NativeMethods.CloseHandle(System.IntPtr)">
            <summary>
             Free the kernel's file object (close the file).
            </summary>
            <param name="handle">The handle.</param>
            <returns>If the handle is closed.</returns>
        </member>
        <member name="M:StealFocus.Core.Security.Impersonation.MySafeLogonHandle.NativeMethods.LogonUser(System.String,System.String,System.String,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Logon method
            </summary>
            <param name="lpszUsername">The username.</param>
            <param name="lpszDomain">The domain.</param>
            <param name="lpszPassword">The password.</param>
            <param name="dwLogonType">The logon type.</param>
            <param name="dwLogonProvider">The logon provider.</param>
            <param name="phToken">The token.</param>
            <returns>If the user is logged on.</returns>
        </member>
        <member name="T:StealFocus.Core.StringExtensions">
            <summary>
            StringExtensions Class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.StringExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            Formats the given string with the given parameters using <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="text">The string to format.</param>
            <param name="values">An <see cref="T:System.Object"/> array. The format values.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:StealFocus.Core.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Formats the given string with the given parameters using <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="text">The string to format.</param>
            <param name="formatProvider">An <see cref="T:System.IFormatProvider"/>. The format provider.</param>
            <param name="values">An <see cref="T:System.Object"/> array. The format values.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="T:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1">
            <summary>
            SimpleXmlSerializer Class.
            </summary>
            <remarks>
            None.
            </remarks>
            <typeparam name="T">The type to be serialized.</typeparam>
        </member>
        <member name="M:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1.Serialize(`0)">
            <summary>
            Serializes the given object to XML.
            </summary>
            <param name="value">An <see cref="T:System.Object"/>. To be serialized.</param>
            <returns>The XML representing the object.</returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1.Serialize(`0,System.String)">
            <summary>
            Serializes the given object to XML.
            </summary>
            <param name="value">An <see cref="T:System.Object"/>. To be serialized.</param>
            <param name="defaultNamespace">The default namespace.</param>
            <returns>The XML representing the object.</returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1.Deserialize(System.String)">
            <summary>
            Deserializes the XML to the given Type.
            </summary>
            <param name="xml">The XML representing the Object.</param>
            <returns>An <see cref="T:System.Object"/>.</returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1.Deserialize(System.String,System.String)">
            <summary>
            Deserializes the XML to the given Type.
            </summary>
            <param name="xml">The XML representing the Object.</param>
            <param name="defaultNamespace">The default namespace.</param>
            <returns>An <see cref="T:System.Object"/>.</returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1.Serialize(`0,System.Xml.Serialization.XmlSerializer)">
            <summary>
            Serializes the given object to XML.
            </summary>
            <param name="value">The object.</param>
            <param name="xmlSerializer">An <see cref="T:System.Xml.Serialization.XmlSerializer"/>. The serializer.</param>
            <returns>The XML containing the serialized object.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.Serialization.SimpleXmlSerializer`1.Deserialize(System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            Deserializes the XML to the given Type.
            </summary>
            <param name="xml">The XML representing the Object.</param>
            <param name="xmlSerializer">An <see cref="T:System.Xml.Serialization.XmlSerializer"/>. The serializer.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:StealFocus.Core.Xml.XmlDocumentExtensions">
            <summary>
            XmlDocumentExtensions Class.
            </summary>
            <remarks>
            Extention methods for <see cref="T:System.Xml.XmlDocument"/>.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlDocumentExtensions.AddElement(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="xmlDocument">The XML document.</param>
            <param name="elementName">The XML element name.</param>
            <param name="elementNamespace">The XML element namespace.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlDocumentExtensions.AddElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="xmlDocument">The XML document.</param>
            <param name="elementName">The XML element name.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlDocumentExtensions.SelectElement(System.Xml.XmlDocument,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Selects an XML element.
            </summary>
            <param name="xmlDocument">The XML document.</param>
            <param name="xpath">The XPath e.g. "/def:MyDocumentElement".</param>
            <param name="namespaces">The namespaces e.g. the key/value pair of "def" and "http://schemas.acme.com/PetShop".</param>
            <returns>The selected XML element.</returns>
        </member>
        <member name="T:StealFocus.Core.Xml.XmlElementExtensions">
            <summary>
            XmlElementExtensions Class.
            </summary>
            <remarks>
            Extention methods for <see cref="T:System.Xml.XmlElement"/>.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddElement(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="parentElement">The parent.</param>
            <param name="elementName">The XML element name.</param>
            <param name="elementNamespace">The XML element namespace.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddElement(System.Xml.XmlElement,System.String)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="parentElement">The parent.</param>
            <param name="elementName">The XML element name.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddElementBefore(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds an element to the document as a sibling.
            </summary>
            <param name="siblingElement">The sibling.</param>
            <param name="elementName">The XML element name.</param>
            <param name="elementNamespace">The XML element namespace.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddElementBefore(System.Xml.XmlElement,System.String)">
            <summary>
            Adds an element to the document as a sibling.
            </summary>
            <param name="siblingElement">The sibling.</param>
            <param name="elementName">The XML element name.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddElementAfter(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds an element to the document as a sibling.
            </summary>
            <param name="siblingElement">The sibling.</param>
            <param name="elementName">The XML element name.</param>
            <param name="elementNamespace">The XML element namespace.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddElementAfter(System.Xml.XmlElement,System.String)">
            <summary>
            Adds an element to the document as a sibling.
            </summary>
            <param name="siblingElement">The sibling.</param>
            <param name="elementName">The XML element name.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddValue(System.Xml.XmlElement,System.String)">
            <summary>
            Add a value to the element.
            </summary>
            <param name="xmlElement">The XML element to hold the value.</param>
            <param name="value">The value to add.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.AddAttribute(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds an attribute to the element.
            </summary>
            <param name="xmlElement">The XML element to contain the attribute.</param>
            <param name="attributeName">The name of the attribute.</param>
            <param name="attributeValue">The value for the attribute.</param>
            <returns>The original XML element.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.Parent(System.Xml.XmlElement)">
            <summary>
            Gets the parent.
            </summary>
            <param name="xmlElement">The current XML element.</param>
            <returns>The parent.</returns>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.Child(System.Xml.XmlElement,System.String)">
            <summary>
            Selects a child element of the provided name.
            </summary>
            <param name="xmlElement">The XML element.</param>
            <param name="childName">The child name.</param>
            <returns>The child element.</returns>
            <remarks>
            Ignores any XML namespaces, looks for the first match only.
            </remarks>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlElementExtensions.Child(System.Xml.XmlElement,System.String,System.Int32)">
            <summary>
            Selects a child element of the provided name.
            </summary>
            <param name="xmlElement">The XML element.</param>
            <param name="childName">The child name.</param>
            <param name="childNameInstanceMatch">The instance to match, zero based e.g. 1 matches the second element matching the given name.</param>
            <returns>The child element.</returns>
            <remarks>
            Ignores any XML namespaces.
            </remarks>
        </member>
        <member name="T:StealFocus.Core.Xml.XmlValidator">
            <summary>
            XmlValidator Class.
            </summary>
        </member>
        <member name="M:StealFocus.Core.Xml.XmlValidator.Validate(System.Xml.XmlDocument,System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Validate the given XML against the schema.
            </summary>
            <param name="xmlDocument">An <see cref="T:System.Xml.XmlDocument"/>. The XML to validate.</param>
            <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet"/>. The schema to validate with.</param>
        </member>
    </members>
</doc>
